Cloudflare workers

# Dashboard > "Workers & Pages"

- Use Workers to host apps like Hono, e.g serverless
- Use Pages to host fullstack web apps, e.g Next.js, or HTML/CSS/JS. It's the "Vercel" of Cloudflare

## Workers

to create a new project, create a new Worker in the Dashboard

then from teh CLI

```shell
npm create cloudflare
```

> note in the code generated, there are a lot of scripts using `wrangler`; a cli for cloudflare

to connect the local application to the application we created in cloudflare, we need go through the auth process

```shell
npx wrangler login
```

that should open a new browser window as a form of 2fa. walk through the steps in the browser to authenticate

when you come back to your app, you should be able to validate the last step by running

```shell
npx wrangler whoami
```

and if all goes well you'll get an output containing your email associated with Cloudflare and the permissions associated with the token

slick

after all of this, lets deploy with the `deploy` script

```shell
npm run deploy
```

### Build apps locally

```shell
npm run start
```

this command runs `npx wrangler dev` and launces a service called "[miniflare](https://miniflare.dev/)" which is a replication of the server that will run in cloudflare

> While in this server, you can run `l` to launch a cloudflare preview server. this is the same http://localhost as the dev server but if you look in the network tab then response headers you'll see `CF-RAY: 1234-DFW` which is a uuid for this specific request and the `Server: cloudflare`

Another thing worth checking out here is if we modify the request to log `request.cf` object, you'll see a blurb of JSON that contains

```js
console.log(JSON.stringify(request.cf));
return new Response('Hello, World!');
```

this shows info such as `asOrganization` which is your actual ISP, your `score` which is a score regarding how sure cloudflare is that you aren't a bot

---

in the `src/index.ts` exists the default export obj

in the `wrangler.toml` is the app config for the oml app. The `compatibility_date` is essentially the version of Cloudflare. https://developers.cloudflare.com/workers/configuration/compatibility-dates/

what is slick about the compabaility is the feature flag aspect, for example if you need specific featuers that are only availble to the version of workers your working with, you can enable that feature as a flag in newer versions of wrangler. This is useful for when your using a feature that might have been depercated but your app still needs it.,
