package partials

import (
  "bus.zcauldron.com/pkg/utils"
  "strconv"
)

// We can't enfore types in the input fields beyond text
// It's a bit unpredicatable what the AI will return.. 
// We attempt to format the responses when we submit this form
// Suppose i could modify the pormpt but i feel more comfortable with this
templ ReceiptManualEdit(ReceiptWithImage utils.ReceiptWithImage) {	
  <div id="results" class="receipt-modify-container">
    <div>
      <h2>Receipt</h2>
      <p>
        Add or modify the details of your receipt here
      </p>
    </div>
    <div id="zc-hj-receipt-img">
        if ReceiptWithImage.Image != "" {
            <img
              class="receipt-image"
              src={"data:image/png;base64," + ReceiptWithImage.Image}
              alt="Receipt Image"
              onclick="openReceiptModal()"
            />
             <div id="receiptImageModal" class="receipt-modal" onclick="closeReceiptModal()">
                  <span class="receipt-modal-close">&times;</span>
                  <img class="receipt-modal-content" id="receiptFullImage">
            </div>
        }
    </div>
    <form
      method="post"
      hx-post="/upload/confirm"
      hx-target="#results"
      hx-swap="outerHTML"
      id="zc-receipt-manual-upload-form"
    > 
      <div>
        <label for="zcauldron_c_image" class="sr-only">Image</label>
        <input id="zc-hidden-img" type="hidden" name="zcauldron_c_image" value={ReceiptWithImage.Image} />
      </div>
      
      <div class="receipt-field">
        <label for="zcauldron_c_merchant">Merchant</label>
        <input 
          required
          id="zc-c-merchant" 
          type="text" 
          value={ReceiptWithImage.Receipt.Merchant} 
          name="zcauldron_c_merchant" 
          placeholder="Bobs Burgers"
        />
      </div>
      <div class="receipt-field">
        <label for="zcauldron_c_date">Date</label>
        <input id="zc-c-date" type="text" value={ReceiptWithImage.Receipt.Date} name="zcauldron_c_date" placeholder="10/08/2024"/>
      </div>
      <div class="receipt-field">
        <label for="zcauldron_c_total">Total</label>
        <input id="zc-c-total" type="text" value={ReceiptWithImage.Receipt.Total} name="zcauldron_c_total" placeholder="$100.00"/>
      </div>

      <div class="receipt-field-items">
        <h3>Items</h3>
        <ul class="receipt-items">
          for index, item := range ReceiptWithImage.Receipt.Items { 
            <li class={"receipt-item receipt-item-" + strconv.Itoa(index)}>
              <input
                type="text"
                value={item.Name}
                name={"name___" + strconv.Itoa(index)}
                id={"name___" + strconv.Itoa(index)}
                class="receipt-item-name"
              />
              <input
                type="text"
                value={item.Price}
                name={"price___" + strconv.Itoa(index)}
                id={"price___" + strconv.Itoa(index)}
                class="receipt-item-price"
              />
              <button type="button" class="remove-item">X</button>
            </li>
          }
        </ul>
        <div class="no-items-message" style="display: none">
          No items here. Please add items manually or click "Next" to proceed.
        </div>
      </div>
      <div class="button-container">
        <button type="button" class="add-item secondary-button">Add Item</button>
        <button type="submit" class="primary-button" id="next">Next</button>
      </div>
    </form>

    <script>
      function openReceiptModal() {
        var modal = document.getElementById("receiptImageModal");
        var modalImg = document.getElementById("receiptFullImage");
        var img = document.querySelector(".receipt-image");
        modal.style.display = "block";
        modalImg.src = img.src;
      }

      function closeReceiptModal() {
        var modal = document.getElementById("receiptImageModal");
        modal.style.display = "none";
      }

      function checkSessionStorage() {
        const storage = sessionStorage.getItem('zc-temp-receipt')

        if (storage) {
          const data = JSON.parse(storage);
          
          // Populate merchant, date, total,  and img
          document.getElementById('zc-c-merchant').value = data.merchant;
          document.getElementById('zc-c-date').value = data.date;
          document.getElementById('zc-c-total').value = data.total;

          // set hidden form value for img
          document.getElementById('zc-hidden-img').src = data.img;

          // hijack image container cause the og img isn't going to show via the back button
          document.getElementById('zc-hj-receipt-img').innerHTML = `
             <img
               class="receipt-image"
               src="${data.img}"
               alt="Receipt Image"
               onclick="openReceiptModal()"
             />
              <div id="receiptImageModal" class="receipt-modal" onclick="closeReceiptModal()">
                   <span class="receipt-modal-close">&times;</span>
                   <img class="receipt-modal-content" id="receiptFullImage">
             </div>
          `;

          // Populate items
          const itemsList = document.querySelector('.receipt-items');
          itemsList.innerHTML = ''; // Clear existing items

          data.items.forEach((item, index) => {
            const li = document.createElement('li');
            li.className = `receipt-item receipt-item-${index}`;
            li.innerHTML = `
              <input
                type="text"
                value="${item.name}"
                name="name___${index}"
                id="name___${index}"
                class="receipt-item-name"
              />
              <input
                type="text"
                value="${item.price}"
                name="price___${index}"
                id="price___${index}"
                class="receipt-item-price"
              />
              <button type="button" class="remove-item">X</button>
            `;
            itemsList.appendChild(li);
          });

          // Update the image if it exists
          const imgElement = document.querySelector('.receipt-image');
          if (imgElement && data.img) {
            imgElement.src = data.img;
          }

          // Clear the session storage after populating the form
          sessionStorage.removeItem('zc-temp-receipt');
        }
      }
      checkSessionStorage()
    </script>
  </div>

}
