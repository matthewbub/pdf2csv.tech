// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.778
package partials

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"bus.zcauldron.com/pkg/utils"
	"strconv"
)

// We can't enfore types in the input fields beyond text
// It's a bit unpredicatable what the AI will return..
// We attempt to format the responses when we submit this form
// Suppose i could modify the pormpt but i feel more comfortable with this
func ReceiptManualEdit(ReceiptWithImage utils.ReceiptWithImage) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"results\" class=\"receipt-modify-container\"><div><h2>Receipt</h2><p>Add or modify the details of your receipt here</p></div><div id=\"zc-hj-receipt-img\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if ReceiptWithImage.Image != "" {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<img class=\"receipt-image\" src=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var2 string
			templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs("data:image/png;base64," + ReceiptWithImage.Image)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/views/partials/ReceiptManualEdit.templ`, Line: 24, Col: 68}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" alt=\"Receipt Image\" onclick=\"openReceiptModal()\"><div id=\"receiptImageModal\" class=\"receipt-modal\" onclick=\"closeReceiptModal()\"><span class=\"receipt-modal-close\">&times;</span> <img class=\"receipt-modal-content\" id=\"receiptFullImage\"></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div><form method=\"post\" hx-post=\"/upload/confirm\" hx-target=\"#results\" hx-swap=\"outerHTML\" id=\"zc-receipt-manual-upload-form\"><div><label for=\"zcauldron_c_image\" class=\"sr-only\">Image</label> <input id=\"zc-hidden-img\" type=\"hidden\" name=\"zcauldron_c_image\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(ReceiptWithImage.Image)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/views/partials/ReceiptManualEdit.templ`, Line: 43, Col: 102}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"></div><div class=\"receipt-field\"><label for=\"zcauldron_c_merchant\">Merchant</label> <input required id=\"zc-c-merchant\" type=\"text\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var4 string
		templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(ReceiptWithImage.Receipt.Merchant)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/views/partials/ReceiptManualEdit.templ`, Line: 52, Col: 50}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" name=\"zcauldron_c_merchant\" placeholder=\"Bobs Burgers\"></div><div class=\"receipt-field\"><label for=\"zcauldron_c_date\">Date</label> <input id=\"zc-c-date\" type=\"text\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var5 string
		templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(ReceiptWithImage.Receipt.Date)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/views/partials/ReceiptManualEdit.templ`, Line: 59, Col: 78}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" name=\"zcauldron_c_date\" placeholder=\"10/08/2024\"></div><div class=\"receipt-field\"><label for=\"zcauldron_c_total\">Total</label> <input id=\"zc-c-total\" type=\"text\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var6 string
		templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(ReceiptWithImage.Receipt.Total)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/views/partials/ReceiptManualEdit.templ`, Line: 63, Col: 80}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" name=\"zcauldron_c_total\" placeholder=\"$100.00\"></div><div class=\"receipt-field-items\"><h3>Items</h3><ul class=\"receipt-items\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for index, item := range ReceiptWithImage.Receipt.Items {
			var templ_7745c5c3_Var7 = []any{"receipt-item receipt-item-" + strconv.Itoa(index)}
			templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var7...)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<li class=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var8 string
			templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var7).String())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/views/partials/ReceiptManualEdit.templ`, Line: 1, Col: 0}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"><input type=\"text\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var9 string
			templ_7745c5c3_Var9, templ_7745c5c3_Err = templ.JoinStringErrs(item.Name)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/views/partials/ReceiptManualEdit.templ`, Line: 73, Col: 32}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var9))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" name=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var10 string
			templ_7745c5c3_Var10, templ_7745c5c3_Err = templ.JoinStringErrs("name___" + strconv.Itoa(index))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/views/partials/ReceiptManualEdit.templ`, Line: 74, Col: 53}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var10))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" id=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var11 string
			templ_7745c5c3_Var11, templ_7745c5c3_Err = templ.JoinStringErrs("name___" + strconv.Itoa(index))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/views/partials/ReceiptManualEdit.templ`, Line: 75, Col: 51}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var11))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" class=\"receipt-item-name\"> <input type=\"text\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var12 string
			templ_7745c5c3_Var12, templ_7745c5c3_Err = templ.JoinStringErrs(item.Price)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/views/partials/ReceiptManualEdit.templ`, Line: 80, Col: 33}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var12))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" name=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var13 string
			templ_7745c5c3_Var13, templ_7745c5c3_Err = templ.JoinStringErrs("price___" + strconv.Itoa(index))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/views/partials/ReceiptManualEdit.templ`, Line: 81, Col: 54}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var13))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" id=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var14 string
			templ_7745c5c3_Var14, templ_7745c5c3_Err = templ.JoinStringErrs("price___" + strconv.Itoa(index))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/views/partials/ReceiptManualEdit.templ`, Line: 82, Col: 52}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var14))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" class=\"receipt-item-price\"> <button type=\"button\" class=\"remove-item\">X</button></li>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</ul><div class=\"no-items-message\" style=\"display: none\">No items here. Please add items manually or click \"Next\" to proceed.</div></div><div class=\"button-container\"><button type=\"button\" class=\"add-item secondary-button\">Add Item</button> <button type=\"submit\" class=\"primary-button\" id=\"next\">Next</button></div></form><script>\n      function openReceiptModal() {\n        var modal = document.getElementById(\"receiptImageModal\");\n        var modalImg = document.getElementById(\"receiptFullImage\");\n        var img = document.querySelector(\".receipt-image\");\n        modal.style.display = \"block\";\n        modalImg.src = img.src;\n      }\n\n      function closeReceiptModal() {\n        var modal = document.getElementById(\"receiptImageModal\");\n        modal.style.display = \"none\";\n      }\n\n\n      // This has the potential to break things,\n      // we'll probably need to clear the session storage if we\n      // land on any page that isn't this exact partial\n      function checkSessionStorage() {\n        const storage = sessionStorage.getItem('zc-temp-receipt')\n\n        if (storage) {\n          const data = JSON.parse(storage);\n          \n          // Populate merchant, date, total,  and img\n          document.getElementById('zc-c-merchant').value = data.merchant;\n          document.getElementById('zc-c-date').value = data.date;\n          document.getElementById('zc-c-total').value = data.total;\n\n          // set hidden form value for img\n          document.getElementById('zc-hidden-img').src = data.img;\n\n          // hijack image container cause the og img isn't going to show via the back button\n          document.getElementById('zc-hj-receipt-img').innerHTML = `\n             <img\n               class=\"receipt-image\"\n               src=\"${data.img}\"\n               alt=\"Receipt Image\"\n               onclick=\"openReceiptModal()\"\n             />\n              <div id=\"receiptImageModal\" class=\"receipt-modal\" onclick=\"closeReceiptModal()\">\n                   <span class=\"receipt-modal-close\">&times;</span>\n                   <img class=\"receipt-modal-content\" id=\"receiptFullImage\">\n             </div>\n          `;\n\n          // Populate items\n          const itemsList = document.querySelector('.receipt-items');\n          itemsList.innerHTML = ''; // Clear existing items\n\n          data.items.forEach((item, index) => {\n            const li = document.createElement('li');\n            li.className = `receipt-item receipt-item-${index}`;\n            li.innerHTML = `\n              <input\n                type=\"text\"\n                value=\"${item.name}\"\n                name=\"name___${index}\"\n                id=\"name___${index}\"\n                class=\"receipt-item-name\"\n              />\n              <input\n                type=\"text\"\n                value=\"${item.price}\"\n                name=\"price___${index}\"\n                id=\"price___${index}\"\n                class=\"receipt-item-price\"\n              />\n              <button type=\"button\" class=\"remove-item\">X</button>\n            `;\n            itemsList.appendChild(li);\n          });\n\n          // Update the image if it exists\n          const imgElement = document.querySelector('.receipt-image');\n          if (imgElement && data.img) {\n            imgElement.src = data.img;\n          }\n\n          // Clear the session storage after populating the form\n          sessionStorage.removeItem('zc-temp-receipt');\n        }\n      }\n      checkSessionStorage()\n    </script></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
