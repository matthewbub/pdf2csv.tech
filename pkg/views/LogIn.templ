package views

import "bus.zcauldron.com/pkg/views/partials"

type LogInData struct {
	Title string
	Name string
	IsLoggedIn bool
	Message string
}

templ LogIn(data LogInData) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			@partials.GlobalHead(data.Title)
		</head>
		<body>
			@partials.GlobalHeader(data.IsLoggedIn)
			<main>
				<div class="card">
					<h2>Login</h2>
					<form id="login-form">
						<input 
							type="text" 
							name="username" 
							placeholder="Username" 
							required 
						/>
						<input
							type="password"
							name="password"
							placeholder="Password"
							required
						/> 
						<div class="form-group">
							<div class="checkbox-group">
								<input type="checkbox" id="remember" name="remember" />
								<label for="remember">Remember me for 30 days</label>
							</div>
							<a href="/forgot-password">Forgot password?</a>
						</div>
						<button type="submit" class="primary-button">Login</button>

						
						<div class="error" id="error-message">{ data.Message }</div>

					</form>
					<script>
					 document.addEventListener("DOMContentLoaded", function() {
                         const loginForm = document.getElementById("login-form");
                         const errorMessage = document.getElementById("error-message");

                         loginForm.addEventListener("submit", async function(event) {
                             event.preventDefault(); // Prevent the default form submission

                             // Get form data
                             const formData = new FormData(loginForm);
                             const username = formData.get("username");
                             const password = formData.get("password");
                             const remember = formData.get("remember") === "on";

                             try {
                                 // Send login data using fetch
                                 const response = await fetch("/api/v1/public/login", {
                                     method: "POST",
                                     headers: {
                                         "Content-Type": "application/json"
                                     },
																			//  TODO encrypt fields
                                     body: JSON.stringify({ username, password, remember })
                                 });

                                 // Parse the JSON response
                                 const data = await response.json();

                                 if (response.ok) {
                                     if (errorMessage) {
                                         errorMessage.style.display = "none";
                                     }
                                     localStorage.setItem("token", data.token); // Store token for authenticated requests
                                     window.location.href = "/dashboard"; // Redirect to the dashboard
                                 } else if (errorMessage) {
                                     // Login failed
                                     errorMessage.style.display = "block";
                                     errorMessage.innerText = data.message || "Login failed. Please try again.";
                                 }
                             } catch (error) {
                                 console.error("Error during login:", error);
																 if (errorMessage) {
																	errorMessage.style.display = "block";
																	errorMessage.innerText = "An error occurred. Please try again.";
																}
                             }
                         });
                     });
					</script>
				</div>
			</main>
			@partials.GlobalFooter()
		</body>
	</html>
}
