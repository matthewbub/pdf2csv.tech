// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.778
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"bus.zcauldron.com/pkg/models"
	"bus.zcauldron.com/pkg/utils"
	"bus.zcauldron.com/pkg/views/partials"
	"fmt"
	"strconv"
)

type FinancesData struct {
	Title      string
	Name       string
	IsLoggedIn bool
	Receipts   []models.Receipt
	Pagination PaginationData
	User       utils.UserObject
}

type PaginationData struct {
	CurrentPage    int
	NextPage       int
	PreviousPage   int
	TotalRecords   int
	TotalPages     int
	RecordsPerPage int
}

func Finances(data FinancesData) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\"><head>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = partials.GlobalHead(data.Title).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</head><body>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = partials.GlobalHeader(data.IsLoggedIn).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<main><div class=\"message-container\" style=\"display: none;\"><i class=\"fa-solid fa-triangle-exclamation\"></i><p id=\"message\"></p><a href=\"/dashboard/finances\" id=\"close-message-button\" aria-label=\"Close message\"><i class=\"fa-solid fa-x\"></i></a></div><div class=\"receipt-collection-container\"><div class=\"receipt-collection-header\"><h2>View your recenet finance history</h2><div class=\"receipt-collection-actions\"><a href=\"/dashboard/finances/v2/receipts\" class=\"primary-button\">Add Receipt</a></div></div><table class=\"modifiable-receipts\" id=\"receipts-table\"><thead><tr><th>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if len(data.Receipts) != 0 {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<input type=\"checkbox\" name=\"select-all\" id=\"select-all\"> <label for=\"select-all\" aria-label=\"Select All\" class=\"sr-only\">Select All</label>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</th><th>Merchant</th><th>Date</th><th>Total</th></tr></thead> <tbody>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if len(data.Receipts) == 0 {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<tr class=\"receipt\"><td colspan=\"4\" style=\"text-align: center;\">No data found <br><a href=\"/dashboard/finances/v2/receipts\">Add some receipts</a></td></tr>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		for _, item := range data.Receipts {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<tr class=\"receipt\"><td><input type=\"checkbox\" name=\"receipt-id\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var2 string
			templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(item.ID)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/views/Finances.templ`, Line: 75, Col: 76}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"></td><td><a href=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 templ.SafeURL = templ.SafeURL(fmt.Sprintf("/dashboard/finances/receipts/%s", item.ID))
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(string(templ_7745c5c3_Var3)))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var4 string
			templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(item.Merchant)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/views/Finances.templ`, Line: 79, Col: 37}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</a></td><td>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if item.Date != "" {
				var templ_7745c5c3_Var5 string
				templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(item.Date)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/views/Finances.templ`, Line: 84, Col: 33}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			} else {
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<span>N/A</span>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</td><td>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var6 string
			templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(item.Total)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/views/Finances.templ`, Line: 89, Col: 34}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</td></tr>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</tbody></table>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if len(data.Receipts) != 0 {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"modifiable-receipts-actions\"><button class=\"outlined-button\" id=\"delete-selected\">Delete (x)</button> <button class=\"outlined-button\" id=\"export-selected\">Export (x)</button></div><div id=\"deleteModal\" class=\"modal\" style=\"display: none;\"><div class=\"modal-content\"><h3>Confirm Deletion</h3><p>Are you sure you want to delete the selected receipts?</p><div class=\"modal-actions\"><button id=\"confirmDelete\" class=\"primary-button\">Delete</button> <button id=\"cancelDelete\" class=\"secondary-button\">Cancel</button></div></div></div><script>\n              const selectAllCheckbox = document.getElementById('select-all');\n              const receiptCheckboxes = document.querySelectorAll('input[name=\"receipt-id\"]');\n              const deleteSelectedButton = document.getElementById('delete-selected');\n              const exportSelectedButton = document.getElementById('export-selected');\n              const modifiableReceiptActions = document.querySelector('.modifiable-receipts-actions');\n\n              function updateButtonVisibility() {\n                const selectedReceipts = Array.from(receiptCheckboxes).filter(checkbox => checkbox.checked);\n                const hasSelectedReceipts = selectedReceipts.length > 0;\n                \n                deleteSelectedButton.textContent = `Delete (${selectedReceipts.length})`;\n                exportSelectedButton.textContent = `Export (${selectedReceipts.length})`;\n                \n                modifiableReceiptActions.style.display = hasSelectedReceipts ? 'flex' : 'none';\n              }\n\n              selectAllCheckbox.addEventListener('change', function() {\n                receiptCheckboxes.forEach(checkbox => {\n                  checkbox.checked = selectAllCheckbox.checked;\n                });\n\n                updateButtonVisibility();\n              });\n\n              receiptCheckboxes.forEach(checkbox => {\n                checkbox.addEventListener('change', function() {\n                  selectAllCheckbox.checked = Array.from(receiptCheckboxes).every(checkbox => checkbox.checked);\n\n                  updateButtonVisibility();\n                });\n              });          \n\n              exportSelectedButton.addEventListener('click', function() {\n                const selectedReceipts = Array.from(receiptCheckboxes).filter(checkbox => checkbox.checked);\n                const selectedReceiptIds = selectedReceipts.map(receipt => receipt.value);\n                console.log('Exporting receipts:', selectedReceiptIds);\n\n                fetch('/api/v1/finances/receipts/export', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json',\n                  },\n                  body: JSON.stringify({ receipt_ids: selectedReceiptIds }),\n                })\n                .then(response => {\n                  if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                  }\n                  return response.blob();\n                })\n                .then(blob => {\n                  const url = window.URL.createObjectURL(blob);\n                  const a = document.createElement('a');\n                  a.style.display = 'none';\n                  a.href = url;\n                  a.download = 'receipts.csv';\n                  document.body.appendChild(a);\n                  a.click();\n                  window.URL.revokeObjectURL(url);\n                })\n                .catch(error => {\n                  console.error('Error exporting receipts:', error);\n                });\n              });\n\n              updateButtonVisibility();\n\n\n              const modal = document.getElementById('deleteModal');\n              const confirmDeleteButton = document.getElementById('confirmDelete');\n              const cancelDeleteButton = document.getElementById('cancelDelete');\n\n              deleteSelectedButton.addEventListener('click', function() {\n                const selectedReceipts = Array.from(receiptCheckboxes).filter(checkbox => checkbox.checked);\n                if (selectedReceipts.length > 0) {\n                  modal.style.display = 'block';\n                }\n              });\n\n              confirmDeleteButton.addEventListener('click', function() {\n                const selectedReceipts = Array.from(receiptCheckboxes).filter(checkbox => checkbox.checked);\n                const selectedReceiptIds = selectedReceipts.map(receipt => receipt.value);\n                console.log('Deleting receipts:', selectedReceiptIds);\n\n                fetch('/api/v1/finances/receipts/delete', {\n                  method: 'DELETE',\n                  headers: {\n                    'Content-Type': 'application/json',\n                  },\n                  body: JSON.stringify({ receipt_ids: selectedReceiptIds }),\n                })\n                .then(response => response.json())\n                .then(data => {\n                  if (data.success) {\n                    window.location.href = window.location.href + '?deleted=true';\n                  } else {\n                    console.error('Failed to delete receipts:', data.error);\n                  }\n                })\n                .catch(error => {\n                  console.error('Error deleting receipts:', error);\n                });\n                \n                // TODO: Implement actual deletion logic here\n                modal.style.display = 'none';\n              });\n\n              cancelDeleteButton.addEventListener('click', function() {\n                modal.style.display = 'none';\n              });\n\n              // Close the modal if clicking outside of it\n              window.addEventListener('click', function(event) {\n                if (event.target === modal) {\n                  modal.style.display = 'none';\n                }\n              });\n\n              if (window.location.search.includes('deleted=true')) {\n                const message = document.getElementById('message');\n                const messageContainer = document.querySelector('.message-container');\n                message.textContent = 'Receipts deleted successfully';                \n                messageContainer.style.display = 'flex';\n              }\n            </script> <div class=\"receipt-pagination\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if data.Pagination.PreviousPage < 1 {
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<a href=\"#\" class=\"secondary-button disabled\">Previous</a> ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			} else {
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<a href=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var7 templ.SafeURL = templ.SafeURL(fmt.Sprintf("/dashboard/finances?page=%d&records=%d", data.Pagination.PreviousPage, data.Pagination.RecordsPerPage))
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(string(templ_7745c5c3_Var7)))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" class=\"secondary-button\">Previous</a> ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<span>Page ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var8 string
			templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(data.Pagination.CurrentPage))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/views/Finances.templ`, Line: 252, Col: 68}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" of ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var9 string
			templ_7745c5c3_Var9, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(data.Pagination.TotalPages))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/views/Finances.templ`, Line: 252, Col: 116}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var9))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</span> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if data.Pagination.NextPage > data.Pagination.TotalPages {
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<a href=\"#\" class=\"secondary-button disabled\">Next</a>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			} else {
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<a href=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var10 templ.SafeURL = templ.SafeURL(fmt.Sprintf("/dashboard/finances?page=%d&records=%d", data.Pagination.NextPage, data.Pagination.RecordsPerPage))
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(string(templ_7745c5c3_Var10)))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" class=\"secondary-button\">Next</a>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div><p>Displaying records  ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var11 string
			templ_7745c5c3_Var11, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(data.Pagination.CurrentPage*data.Pagination.RecordsPerPage - data.Pagination.RecordsPerPage + 1))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/views/Finances.templ`, Line: 261, Col: 127}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var11))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" to ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if len(data.Receipts) < data.Pagination.RecordsPerPage {
				var templ_7745c5c3_Var12 string
				templ_7745c5c3_Var12, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(len(data.Receipts) + (data.Pagination.CurrentPage * data.Pagination.RecordsPerPage) - data.Pagination.RecordsPerPage))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/views/Finances.templ`, Line: 264, Col: 148}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var12))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			} else {
				var templ_7745c5c3_Var13 string
				templ_7745c5c3_Var13, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(data.Pagination.CurrentPage * data.Pagination.RecordsPerPage))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/views/Finances.templ`, Line: 266, Col: 92}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var13))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("of ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var14 string
			templ_7745c5c3_Var14, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(data.Pagination.TotalRecords))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/views/Finances.templ`, Line: 269, Col: 58}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var14))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</p>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></main>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = partials.GlobalFooter().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<script src=\"/js/receipt-utils.js\"></script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
