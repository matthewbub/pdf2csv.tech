// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.778
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "bus.zcauldron.com/pkg/views/partials"

type LogInData struct {
	Title      string
	Name       string
	IsLoggedIn bool
	Message    string
}

func LogIn(data LogInData) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\"><head>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = partials.GlobalHead(data.Title).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</head><body>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = partials.GlobalHeader(data.IsLoggedIn).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<main><div class=\"card\"><h2>Login</h2><form id=\"login-form\"><input type=\"text\" name=\"username\" placeholder=\"Username\" required> <input type=\"password\" name=\"password\" placeholder=\"Password\" required><div class=\"form-group\"><div class=\"checkbox-group\"><input type=\"checkbox\" id=\"remember\" name=\"remember\"> <label for=\"remember\">Remember me for 30 days</label></div><a href=\"/forgot-password\">Forgot password?</a></div><button type=\"submit\" class=\"primary-button\">Login</button><div class=\"error\" id=\"error-message\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(data.Message)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/views/LogIn.templ`, Line: 46, Col: 58}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></form><script>\n\t\t\t\t\t document.addEventListener(\"DOMContentLoaded\", function() {\n                         const loginForm = document.getElementById(\"login-form\");\n                         const errorMessage = document.getElementById(\"error-message\");\n\n                         loginForm.addEventListener(\"submit\", async function(event) {\n                             event.preventDefault(); // Prevent the default form submission\n\n                             // Get form data\n                             const formData = new FormData(loginForm);\n                             const username = formData.get(\"username\");\n                             const password = formData.get(\"password\");\n                             const remember = formData.get(\"remember\") === \"on\";\n\n                             try {\n                                 // Send login data using fetch\n                                 const response = await fetch(\"/api/v1/public/login\", {\n                                     method: \"POST\",\n                                     headers: {\n                                         \"Content-Type\": \"application/json\"\n                                     },\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//  TODO encrypt fields\n                                     body: JSON.stringify({ username, password, remember })\n                                 });\n\n                                 // Parse the JSON response\n                                 const data = await response.json();\n\n                                 if (response.ok) {\n                                     if (errorMessage) {\n                                         errorMessage.style.display = \"none\";\n                                     }\n                                     localStorage.setItem(\"token\", data.token); // Store token for authenticated requests\n                                     window.location.href = \"/dashboard\"; // Redirect to the dashboard\n                                 } else if (errorMessage) {\n                                     // Login failed\n                                     errorMessage.style.display = \"block\";\n                                     errorMessage.innerText = data.message || \"Login failed. Please try again.\";\n                                 }\n                             } catch (error) {\n                                 console.error(\"Error during login:\", error);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t if (errorMessage) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessage.style.display = \"block\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessage.innerText = \"An error occurred. Please try again.\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n                             }\n                         });\n                     });\n\t\t\t\t\t</script></div></main>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = partials.GlobalFooter().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
